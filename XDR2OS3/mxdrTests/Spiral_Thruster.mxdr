enum Spiral_Thrust_Status { OK, Error };
enum Error_Table { TBD };
enum Telem_Failure_Code { OK, Failed };

typedef float X_Degrees_Type range 0 .. 10;
typedef float Y_Degrees_Type range 0 .. 10;
typedef float Thrust_Force_Type range 0 .. 150;
typedef unsigned int Time_Type range 0 .. Natural'Last;
typedef unsigned int Telemetry_Address_Type range 0 .. Natural'Last;
typedef float Telemetry_Value_Type;

message struct -> Thrust_Command_Request {
        X_Degrees_Type X_Degrees;
        Y_Degrees_Type Y_Degrees;
        Thrust_Force_Type Thrust_Force;
        Time_Type Time; };

message struct <- Thrust_Command_Reply {
        Spiral_Thrust_Status Thrust_Status; };

message struct -> Spiral_Thrust_Request {
        X_Degrees_Type X_Degrees;
        Y_Degrees_Type Y_Degrees;
        Thrust_Force_Type Thrust_Force;
        Time_Type Time; };

message struct <- Spiral_Thrust_Reply {
        Spiral_Thrust_Status Thrust_Status; };

message struct -> Standby_Request {void;};

message struct <- Standby_Reply {
        Spiral_Thrust_Status Thrust_Status; };

message struct -> Telemetry_Value_Request {
        Telemetry_Address_Type Telem_Addr; };

message struct <- Telemetry_Value_Reply {
        Telemetry_Value_Type Response_Val; };

